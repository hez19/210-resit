#include <iostream>
using namespace std; 

class Node{
public:
	int data;
        Node*pre;
	Node*next;
};
//determine the deleted node location 
void deletenode(Node**head,Node*deleteNode){
	if(*head == NULL || deleteNode == NULL)
		return;
		//delete head node
		 if(*head == deleteNode)
    	*head = deleteNode->next;
    	
		 if(deleteNode->pre != NULL)
		deleteNode->next->pre = deleteNode->pre;
		
		 if(deleteNode->next != NULL)
		deleteNode->pre->next = deleteNode->next;
		//delete the node
	delete deleteNode;
	
}
//delete the node from given positon
void position(Node**head,int n){
	if(*head == NULL || n<=0)
		return;
					
    Node*p = *head;
    
	for(int i=1;p != NULL && i<n;i++)
    p = p->next;
	if(p == NULL)
	return;
	//delete the node pointer "p"
	deletenode(head,p);
	
}
//insert new node into the new array
void insert(Node**head,int newdata){
    Node*temp = new Node;
	temp->data = newdata;
	temp->pre = NULL;
	temp->next = (*head);
	//change the new head node
	if((*head) !=NULL)
	(*head)->pre = temp;
	(*head) = temp; 	

}
//print the list
void print(Node*head){
	while(head != NULL){
		cout<<head->data<<" ";
		head = head ->next;
	} 
}
//insert and delete 
int main(){
	Node*head = NULL;
	insert(&head,8);
    insert(&head,6);
	insert(&head,7);
	insert(&head,9);
	cout<<"Double link list:"<<" "; 
	print(head);
		
	cout<<"\n\nselect a positon to delete?"<<" ";
	int n;
	cin>>n;
    position(&head, n);

	cout<<"\nNew double link list:"<<" ";
	print(head);
	return 0;
	
}
