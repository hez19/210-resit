#include <iostream>
using namespace std;

void mergesort(int*a,int l,int mid,int r){
    //separate array 
	mid=(l+r)/2;		
	int i = l;
	int j = mid+1;
	//make a new array to save the data 
	int k = l;
	int temp[10];
	//Classification of the head  and  tail nodes
	while(i<=mid || j<=r) {
		if(a[i] < a[j]){
		temp[k] = a[i];
		k++;i++; 
	}else{
		temp[k] = a[j];
		k++;j++;
	}
}
	while(i <= mid){
		temp[k] = a[i];
		k++;i++;
	}if(j <= r){
	    temp[k] = a[j];
     	k++;j++;
	}
	for(int i=l;i <= r;i++){
		a[i] = temp[i];
	}
}
//recursive function to sort
void mergeSort(int a[],int l,int r){
	int mid=(l+r)/2;
	if(l >= r){
		return;
		} 
	mergeSort(a,l,mid);//left
	
	mergeSort(a,mid+1,r);//right
	
	mergesort(a,l,mid,r);//combine
	
}

int main(){
	int n;
	cout<<"how many elements?"<<" ";
	cin>>n;
	//the number of array
    int a[n];
    cout<<"Enter your elements:"<<" "<<endl;
    //output the list you enter
    for(int i=0;i<n;i++){
  	cin>>a[i]; 
	  }
	  mergeSort(a,0,n-1);
	  //output the list after sort
  	for(int i=0;i<n;i++){
  		cout<<a[i]<<" ";
	  }
  
  } 
